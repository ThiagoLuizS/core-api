plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'br.com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
	maven {
		url "https://repo.spring.io/plugins-release"
	}
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-jdbc"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-mail"
	implementation "org.springframework.boot:spring-boot-starter-cache"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation 'org.springframework.security:spring-security-core:5.7.4'
	implementation 'org.springframework.security:spring-security-web:5.7.4'
	implementation 'org.modelmapper:modelmapper:2.1.1'
	implementation "org.keycloak:keycloak-spring-boot-starter"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server:${spring_boot_version}"
	implementation "org.apache.logging.log4j:log4j-api:${log4j_version}"
	implementation "org.apache.logging.log4j:log4j-core:${log4j_version}"
	implementation "org.zalando:problem-spring-web:${zalando_problem_version}"
	implementation 'org.hibernate:hibernate-core:5.6.15.Final'
	implementation "org.mapstruct:mapstruct:${mapstruct_version}"
	implementation "org.springdoc:springdoc-openapi-ui:${springdoc_version}"
	implementation "org.springdoc:springdoc-openapi-security:${springdoc_version}"
	implementation "org.springdoc:springdoc-openapi-data-rest:${springdoc_version}"
	implementation group: 'org.eclipse.jetty', name: 'jetty-server', version: '12.0.0.alpha3'
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
	implementation("io.github.openfeign:feign-okhttp:11.9.1")
	implementation "org.springframework.data:spring-data-envers"
	implementation 'org.postgresql:postgresql:42.5.1'
	implementation 'org.springframework.security:spring-security-config:5.6.1'
	implementation 'org.flywaydb:flyway-core:9.0.0'
	implementation ('org.spockframework:spock-core:2.2-M1-groovy-4.0') {
		exclude group: 'org.codehaus.groovy'
	}

	compileOnly 'org.projectlombok:lombok'
	compileOnly 'javax.servlet:servlet-api:2.5'

	runtimeOnly 'org.postgresql:postgresql'

	developmentOnly "org.springframework.boot:spring-boot-devtools"

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
	testImplementation "org.testcontainers:testcontainers:${testcontainers_version}"
	testImplementation "org.testcontainers:junit-jupiter:${testcontainers_version}"
	testImplementation "org.testcontainers:localstack:${testcontainers_version}"
	testImplementation platform("org.spockframework:spock-bom:2.2-M1-groovy-4.0")
	testImplementation "org.spockframework:spock-junit4"
	testImplementation ('org.spockframework:spock-core:2.2-M1-groovy-4.0') {
		exclude group: 'org.codehaus.groovy'
	}

	testCompileOnly "org.projectlombok:lombok"

	testAnnotationProcessor "org.projectlombok:lombok"

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR3"
		mavenBom "org.keycloak.bom:keycloak-adapter-bom:${keycloak_version}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
